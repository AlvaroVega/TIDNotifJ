//File: CosNotifyCommAck.idl
//Part of the extended Notification Service

#ifndef _COS_NOTIFY_COMM_ACK_IDL_
#define _COS_NOTIFY_COMM_ACK_IDL_

#include <CosNotifyComm.idl>

#pragma prefix "omg.org"

module CosNotifyCommAck {
	const string SequenceNumber = "SequenceNumber";
	// SequenceNumber takes a value of type long.
	
	// Structured events must include a SequenceNumber field to be acknowledged
	typedef sequence<long> SequenceNumbers;
	
	const string DeliveryReliability = "DeliveryReliability";
	const short None = 0;
	const short Acknowledgment = 1;
	// DeliveryReliability takes value of None or Acknowledgement as Notification Qos

	const string RetryInterval = "RetryInterval";
	// RetryInterval takes on a value of TimeBase::TimeT as Notification Qos

	const string Retries = "Retries";
	// Retries takes on a value of type long as Notification Qos Parameter

	interface StructuredPushSupplierAck : CosNotifyComm::StructuredPushSupplier {
		void acknowledge( in SequenceNumbers sequence_numbers );
	};
	
	interface StructuredPullSupplierAck : CosNotifyComm::StructuredPullSupplier {
		void acknowledge( in SequenceNumbers sequence_numbers );
	};
	
	interface SequencePushSupplierAck : CosNotifyComm::SequencePushSupplier {
		void acknowledge( in SequenceNumbers sequence_numbers );
	};
	
	interface SequencePullSupplierAck : CosNotifyComm::SequencePullSupplier {
		void acknowledge( in SequenceNumbers sequence_numbers );
	};
	
};
#endif /* #ifndef _COS_NOTIFY_COMM_ACK_IDL_ */
