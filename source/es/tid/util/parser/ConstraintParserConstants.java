/*
* MORFEO Project
* http://www.morfeo-project.org
*
* Component: TIDNotifJ
* Programming Language: Java
*
* File: $Source$
* Version: $Revision: 3 $
* Date: $Date: 2006-01-17 17:42:13 +0100 (Tue, 17 Jan 2006) $
* Last modified by: $Author: aarranz $
*
* (C) Copyright 2005 Telefónica Investigación y Desarrollo
*     S.A.Unipersonal (Telefónica I+D)
*
* Info about members and contributors of the MORFEO project
* is available at:
*
*   http://www.morfeo-project.org/TIDNotifJ/CREDITS
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*
* If you want to use this software an plan to distribute a
* proprietary application in any way, and you are not licensing and
* distributing your source code under GPL, you probably need to
* purchase a commercial license of the product.  More info about
* licensing options is available at:
*
*   http://www.morfeo-project.org/TIDNotifJ/Licensing
*/ 

/* Generated By:JJTree&JavaCC: Do not edit this line. ConstraintParserConstants.java */
package es.tid.util.parser;
public interface ConstraintParserConstants {

  int EOF = 0;
  int TK_OPENPAR = 7;
  int TK_CLOSEPAR = 8;
  int TK_OPENSBRACKET = 9;
  int TK_CLOSESBRACKET = 10;
  int TK_SEMICOLON = 11;
  int TK_COLON = 12;
  int TK_COMMA = 13;
  int TK_DOT = 14;
  int TK_ADD = 15;
  int TK_MINUS = 16;
  int TK_MUL = 17;
  int TK_DIV = 18;
  int TK_MOD = 19;
  int TK_TILDE = 20;
  int TK_LESS = 21;
  int TK_GREAT = 22;
  int TK_EQ = 23;
  int TK_DIF = 24;
  int TK_DIF2 = 25;
  int TK_LESSEQ = 26;
  int TK_GREATEQ = 27;
  int TK_LIKE = 28;
  int TK_SINGLEQUOTE = 29;
  int TK_DOUBLEQUOTE = 30;
  int TK_VALUE = 31;
  int TK_UNDERSCORE = 32;
  int TK_BACKSLASH = 33;
  int TK_IN = 34;
  int TK_OR = 35;
  int TK__D = 36;
  int TK_AND = 37;
  int TK_NOT = 38;
  int TK_TRUE = 39;
  int TK_IDL = 40;
  int TK_FALSE = 41;
  int TK_TC_ID = 42;
  int TK_EXIST = 43;
  int TK_COUNT = 44;
  int TK_INSTR = 45;
  int TK_LENGTH = 46;
  int TK__LENGTH = 47;
  int TK_MODULO = 48;
  int TK_DATECMP = 49;
  int TK_DATECMP2 = 50;
  int TK_TC_KIND = 51;
  int TK_TC_NAME = 52;
  int TK_DEFAULT = 53;
  int TK__TYPE_ID = 54;
  int TK__REPOS_ID = 55;
  int TK_SUBSTRING = 56;
  int TK_BEGINSTRING = 57;
  int TK_DISCRIMINATOR = 58;
  int INTEGER_LITERAL = 59;
  int FLOATING_POINT_LITERAL = 60;
  int CHARACTER_LITERAL = 61;
  int STRING_LITERAL = 62;
  int DECIMAL_LITERAL = 63;
  int HEXA_LITERAL = 64;
  int OCTAL_LITERAL = 65;
  int TK_HEXA = 66;
  int HEXA_DIGIT = 67;
  int DECIMAL_DIGIT = 68;
  int FIRST_DIGIT = 69;
  int OCTAL_DIGIT = 70;
  int O_DIGIT = 71;
  int TETRA_DIGIT = 72;
  int T_DIGIT = 73;
  int TK_ZERO = 74;
  int TK_EXPONENT = 75;
  int IDENTIFIER = 76;
  int LEADER = 77;
  int FOLLOW = 78;
  int ALPHA = 79;
  int EOL = 80;
  int TYPECODE = 81;
  int IDL_IDENTIFIER = 82;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"~\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"!=\"",
    "\"<>\"",
    "\"<=\"",
    "\">=\"",
    "\"like\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"$\"",
    "\"_\"",
    "\"\\\\\"",
    "\"in\"",
    "\"or\"",
    "\"_d\"",
    "\"and\"",
    "\"not\"",
    "\"TRUE\"",
    "\"IDL:\"",
    "\"FALSE\"",
    "\"tc_id\"",
    "\"exist\"",
    "\"count\"",
    "\"instr\"",
    "\"length\"",
    "\"_length\"",
    "\"module\"",
    "\"datecmp\"",
    "\"DATEcmp\"",
    "\"tc_kind\"",
    "\"tc_name\"",
    "\"default\"",
    "\"_type_id\"",
    "\"_repos_id\"",
    "\"substring\"",
    "\"beginstring\"",
    "\"discriminator\"",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEXA_LITERAL>",
    "<OCTAL_LITERAL>",
    "<TK_HEXA>",
    "<HEXA_DIGIT>",
    "<DECIMAL_DIGIT>",
    "<FIRST_DIGIT>",
    "<OCTAL_DIGIT>",
    "<O_DIGIT>",
    "<TETRA_DIGIT>",
    "<T_DIGIT>",
    "\"0\"",
    "<TK_EXPONENT>",
    "<IDENTIFIER>",
    "<LEADER>",
    "<FOLLOW>",
    "<ALPHA>",
    "\"\\n\"",
    "<TYPECODE>",
    "<IDL_IDENTIFIER>",
  };

}
